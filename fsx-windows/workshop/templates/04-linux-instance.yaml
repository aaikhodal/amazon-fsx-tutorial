---
AWSTemplateFormatVersion: 2010-09-09

Description: Launches one Amazon EC2 Linux instance

Metadata:
  License:
    Description: 'Copyright 2019 Amazon.com, Inc. and its affiliates. All Rights Reserved.
      Licensed under the Amazon Software License (the "License"). You may not use this file
      except in compliance with the License. A copy of the License is located at
      http://aws.amazon.com/asl/
      or in the "license" file accompanying this file. This file is distributed on an "AS IS"
      BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
      License for the specific language governing permissions and limitations under the License.'
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Amazon EC2 Linux Instances
      Parameters:
        - InstanceType
        - Subnets
        - SecurityGroups
        - KeyName
    ParameterLabels:
      KeyName:
        default: EC2 key pair
      InstanceType:
        default: EC2 instance type
      SecurityGroups:
        default: Security groups
      Subnets:
        default: Subnet

Parameters:
  KeyName:
    Description: An existing Amazon EC2 key pair
    Type: AWS::EC2::KeyPair::KeyName
  InstanceType:
    AllowedValues: 
    - t3.large
    - t3.xlarge
    - c5.large
    - c5.xlarge
    - m5.large
    - m5.xlarge
    Default: c5.large
    Description: Amazon EC2 instance type
    Type: String
  SecurityGroups:
    Description: Select the security group.
    Type: AWS::EC2::SecurityGroup::Id
  Subnets:
    Description: Select one subnet.
    Type: AWS::EC2::Subnet::Id

Resources:
  Instance1:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !GetAtt AmiInfo.Id
      Monitoring: true
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SecurityGroupIds: 
        - !Ref SecurityGroups
      SubnetId: !Ref Subnets
      Tags:
        - Key: Name
          Value: "Linux Server"
  AmiInfoFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub solution-references-${AWS::Region}
        S3Key: fsx/amilookup-lin.zip
      Handler: amilookup-lin.handler
      Runtime: nodejs8.10
      Timeout: 30
      Role: !GetAtt LambdaExecutionRole.Arn
  AmiInfo:
    Type: Custom::AmiInfo
    Properties:
      ServiceToken: !GetAtt AmiInfoFunction.Arn
      Region: !Ref 'AWS::Region'
      OSName: "Amazon Linux 2 (x86_64)"
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AWSLambdaExecute'
      Path: "/"
      Policies:
      - PolicyName: root
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - ec2:DescribeImages
            Resource: "*"

Outputs:
  Instance1:
    Description: Amazon EC2 Linux Server
    Value: !Ref Instance1
  InstanceAmi:
    Description: Amazon EC2 instance AMI Id
    Value: !GetAtt AmiInfo.Id

